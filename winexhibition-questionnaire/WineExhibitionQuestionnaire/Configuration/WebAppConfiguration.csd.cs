//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WineExhibitionQuestionnaire
{
    
    
    /// <summary>
    /// The WebAppConfiguration Configuration Section.
    /// </summary>
    public partial class WebAppConfiguration : global::System.Configuration.ConfigurationSection
    {
        
        #region Singleton Instance
        /// <summary>
        /// The XML name of the WebAppConfiguration Configuration Section.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string WebAppConfigurationSectionName = "webAppConfiguration";
        
        /// <summary>
        /// The XML path of the WebAppConfiguration Configuration Section.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string WebAppConfigurationSectionPath = "webAppConfiguration";
        
        /// <summary>
        /// Gets the WebAppConfiguration instance.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public static global::WineExhibitionQuestionnaire.WebAppConfiguration Instance
        {
            get
            {
                return ((global::WineExhibitionQuestionnaire.WebAppConfiguration)(global::System.Configuration.ConfigurationManager.GetSection(global::WineExhibitionQuestionnaire.WebAppConfiguration.WebAppConfigurationSectionPath)));
            }
        }
        #endregion
        
        #region Xmlns Property
        /// <summary>
        /// The XML name of the <see cref="Xmlns"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string XmlnsPropertyName = "xmlns";
        
        /// <summary>
        /// Gets the XML namespace of this Configuration Section.
        /// </summary>
        /// <remarks>
        /// This property makes sure that if the configuration file contains the XML namespace,
        /// the parser doesn't throw an exception because it encounters the unknown "xmlns" attribute.
        /// </remarks>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::WineExhibitionQuestionnaire.WebAppConfiguration.XmlnsPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public string Xmlns
        {
            get
            {
                return ((string)(base[global::WineExhibitionQuestionnaire.WebAppConfiguration.XmlnsPropertyName]));
            }
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region MailJet Property
        /// <summary>
        /// The XML name of the <see cref="MailJet"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string MailJetPropertyName = "mailJet";
        
        /// <summary>
        /// Gets or sets the MailJet.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        [global::System.ComponentModel.DescriptionAttribute("The MailJet.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::WineExhibitionQuestionnaire.WebAppConfiguration.MailJetPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual global::WineExhibitionQuestionnaire.MailJetConfiguration MailJet
        {
            get
            {
                return ((global::WineExhibitionQuestionnaire.MailJetConfiguration)(base[global::WineExhibitionQuestionnaire.WebAppConfiguration.MailJetPropertyName]));
            }
            set
            {
                base[global::WineExhibitionQuestionnaire.WebAppConfiguration.MailJetPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace WineExhibitionQuestionnaire
{
    
    
    /// <summary>
    /// The MailJetConfiguration Configuration Element.
    /// </summary>
    public partial class MailJetConfiguration : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region FromEmail Property
        /// <summary>
        /// The XML name of the <see cref="FromEmail"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string FromEmailPropertyName = "fromEmail";
        
        /// <summary>
        /// Gets or sets the FromEmail.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        [global::System.ComponentModel.DescriptionAttribute("The FromEmail.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::WineExhibitionQuestionnaire.MailJetConfiguration.FromEmailPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual string FromEmail
        {
            get
            {
                return ((string)(base[global::WineExhibitionQuestionnaire.MailJetConfiguration.FromEmailPropertyName]));
            }
            set
            {
                base[global::WineExhibitionQuestionnaire.MailJetConfiguration.FromEmailPropertyName] = value;
            }
        }
        #endregion
        
        #region ApiKey Property
        /// <summary>
        /// The XML name of the <see cref="ApiKey"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string ApiKeyPropertyName = "apiKey";
        
        /// <summary>
        /// Gets or sets the ApiKey.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        [global::System.ComponentModel.DescriptionAttribute("The ApiKey.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::WineExhibitionQuestionnaire.MailJetConfiguration.ApiKeyPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual string ApiKey
        {
            get
            {
                return ((string)(base[global::WineExhibitionQuestionnaire.MailJetConfiguration.ApiKeyPropertyName]));
            }
            set
            {
                base[global::WineExhibitionQuestionnaire.MailJetConfiguration.ApiKeyPropertyName] = value;
            }
        }
        #endregion
        
        #region ApiSecret Property
        /// <summary>
        /// The XML name of the <see cref="ApiSecret"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string ApiSecretPropertyName = "apiSecret";
        
        /// <summary>
        /// Gets or sets the ApiSecret.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        [global::System.ComponentModel.DescriptionAttribute("The ApiSecret.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::WineExhibitionQuestionnaire.MailJetConfiguration.ApiSecretPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual string ApiSecret
        {
            get
            {
                return ((string)(base[global::WineExhibitionQuestionnaire.MailJetConfiguration.ApiSecretPropertyName]));
            }
            set
            {
                base[global::WineExhibitionQuestionnaire.MailJetConfiguration.ApiSecretPropertyName] = value;
            }
        }
        #endregion
        
        #region TemplateOrderId Property
        /// <summary>
        /// The XML name of the <see cref="TemplateOrderId"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string TemplateOrderIdPropertyName = "templateOrderId";
        
        /// <summary>
        /// Gets or sets the TemplateOrderId.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        [global::System.ComponentModel.DescriptionAttribute("The TemplateOrderId.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::WineExhibitionQuestionnaire.MailJetConfiguration.TemplateOrderIdPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual int TemplateOrderId
        {
            get
            {
                return ((int)(base[global::WineExhibitionQuestionnaire.MailJetConfiguration.TemplateOrderIdPropertyName]));
            }
            set
            {
                base[global::WineExhibitionQuestionnaire.MailJetConfiguration.TemplateOrderIdPropertyName] = value;
            }
        }
        #endregion
        
        #region FromName Property
        /// <summary>
        /// The XML name of the <see cref="FromName"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string FromNamePropertyName = "fromName";
        
        /// <summary>
        /// Gets or sets the FromName.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        [global::System.ComponentModel.DescriptionAttribute("The FromName.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::WineExhibitionQuestionnaire.MailJetConfiguration.FromNamePropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual string FromName
        {
            get
            {
                return ((string)(base[global::WineExhibitionQuestionnaire.MailJetConfiguration.FromNamePropertyName]));
            }
            set
            {
                base[global::WineExhibitionQuestionnaire.MailJetConfiguration.FromNamePropertyName] = value;
            }
        }
        #endregion
        
        #region EditUrl Property
        /// <summary>
        /// The XML name of the <see cref="EditUrl"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string EditUrlPropertyName = "editUrl";
        
        /// <summary>
        /// Gets or sets the EditUrl.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        [global::System.ComponentModel.DescriptionAttribute("The EditUrl.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::WineExhibitionQuestionnaire.MailJetConfiguration.EditUrlPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual string EditUrl
        {
            get
            {
                return ((string)(base[global::WineExhibitionQuestionnaire.MailJetConfiguration.EditUrlPropertyName]));
            }
            set
            {
                base[global::WineExhibitionQuestionnaire.MailJetConfiguration.EditUrlPropertyName] = value;
            }
        }
        #endregion
        
        #region TemplateSentId Property
        /// <summary>
        /// The XML name of the <see cref="TemplateSentId"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string TemplateSentIdPropertyName = "templateSentId";
        
        /// <summary>
        /// Gets or sets the TemplateSentId.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        [global::System.ComponentModel.DescriptionAttribute("The TemplateSentId.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::WineExhibitionQuestionnaire.MailJetConfiguration.TemplateSentIdPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual string TemplateSentId
        {
            get
            {
                return ((string)(base[global::WineExhibitionQuestionnaire.MailJetConfiguration.TemplateSentIdPropertyName]));
            }
            set
            {
                base[global::WineExhibitionQuestionnaire.MailJetConfiguration.TemplateSentIdPropertyName] = value;
            }
        }
        #endregion
    }
}
