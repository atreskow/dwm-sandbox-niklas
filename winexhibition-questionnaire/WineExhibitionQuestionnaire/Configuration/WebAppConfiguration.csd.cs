//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WineExhibitionQuestionnaire.Configuration
{
    
    
    /// <summary>
    /// The WebAppConfiguration Configuration Section.
    /// </summary>
    public partial class WebAppConfiguration : global::System.Configuration.ConfigurationSection
    {
        
        #region Singleton Instance
        /// <summary>
        /// The XML name of the WebAppConfiguration Configuration Section.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string WebAppConfigurationSectionName = "webAppConfiguration";
        
        /// <summary>
        /// The XML path of the WebAppConfiguration Configuration Section.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string WebAppConfigurationSectionPath = "webAppConfiguration";
        
        /// <summary>
        /// Gets the WebAppConfiguration instance.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public static global::WineExhibitionQuestionnaire.Configuration.WebAppConfiguration Instance
        {
            get
            {
                return ((global::WineExhibitionQuestionnaire.Configuration.WebAppConfiguration)(global::System.Configuration.ConfigurationManager.GetSection(global::WineExhibitionQuestionnaire.Configuration.WebAppConfiguration.WebAppConfigurationSectionPath)));
            }
        }
        #endregion
        
        #region Xmlns Property
        /// <summary>
        /// The XML name of the <see cref="Xmlns"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string XmlnsPropertyName = "xmlns";
        
        /// <summary>
        /// Gets the XML namespace of this Configuration Section.
        /// </summary>
        /// <remarks>
        /// This property makes sure that if the configuration file contains the XML namespace,
        /// the parser doesn't throw an exception because it encounters the unknown "xmlns" attribute.
        /// </remarks>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::WineExhibitionQuestionnaire.Configuration.WebAppConfiguration.XmlnsPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public string Xmlns
        {
            get
            {
                return ((string)(base[global::WineExhibitionQuestionnaire.Configuration.WebAppConfiguration.XmlnsPropertyName]));
            }
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region AuthenticationConfig Property
        /// <summary>
        /// The XML name of the <see cref="AuthenticationConfig"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string AuthenticationConfigPropertyName = "authenticationConfig";
        
        /// <summary>
        /// Gets or sets the AuthenticationConfig.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        [global::System.ComponentModel.DescriptionAttribute("The AuthenticationConfig.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::WineExhibitionQuestionnaire.Configuration.WebAppConfiguration.AuthenticationConfigPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual global::WineExhibitionQuestionnaire.Configuration.AuthenticationConfiguration AuthenticationConfig
        {
            get
            {
                return ((global::WineExhibitionQuestionnaire.Configuration.AuthenticationConfiguration)(base[global::WineExhibitionQuestionnaire.Configuration.WebAppConfiguration.AuthenticationConfigPropertyName]));
            }
            set
            {
                base[global::WineExhibitionQuestionnaire.Configuration.WebAppConfiguration.AuthenticationConfigPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace WineExhibitionQuestionnaire.Configuration
{
    
    
    /// <summary>
    /// The AuthenticationConfiguration Configuration Element.
    /// </summary>
    public partial class AuthenticationConfiguration : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region SecretKey Property
        /// <summary>
        /// The XML name of the <see cref="SecretKey"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        internal const string SecretKeyPropertyName = "secretKey";
        
        /// <summary>
        /// Gets or sets the SecretKey.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.801")]
        [global::System.ComponentModel.DescriptionAttribute("The SecretKey.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::WineExhibitionQuestionnaire.Configuration.AuthenticationConfiguration.SecretKeyPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual string SecretKey
        {
            get
            {
                return ((string)(base[global::WineExhibitionQuestionnaire.Configuration.AuthenticationConfiguration.SecretKeyPropertyName]));
            }
            set
            {
                base[global::WineExhibitionQuestionnaire.Configuration.AuthenticationConfiguration.SecretKeyPropertyName] = value;
            }
        }
        #endregion
    }
}
